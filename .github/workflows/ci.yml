---

name: build-check
on: [push, pull_request]
jobs:
  lint:
    name: lint
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.29
  test-and-build:
    name: Test and build on Go ${{ matrix.go }}
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        go:
          - '1.15'
          - '1.14'
          - '1.13'
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: ortelius
        options: --health-cmd="mysqladmin ping" --health-interval=5s --health-timeout=2s --health-retries=3
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go }}
      - name: Test binary build
        run: go build cmds/orteliusd/orteliusd.go
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.11.0/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate
      - name: Wait for database
        env:
          PORT: ${{ job.services.mysql.ports[3306] }}
        run: |
          -c 'while ! migrate -path=/migrations/ -database "mysql://root:password@tcp(mysql:$PORT)/ortelius_test" up; do
            sleep 1
          done'
      - name: Run tests
        run: make tests
      - name: Save test coverage
        uses: shogo82148/actions-goveralls@v1
        if: matrix.go == '1.15'
        with:
          path-to-profile: coverage.out
